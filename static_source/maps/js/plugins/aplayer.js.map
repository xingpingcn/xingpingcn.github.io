{"version":3,"sources":["js/plugins/aplayer.js"],"names":["RightMenuAplayer","e","a","l","checkAPlayer","undefined","player","setAPlayerObject","observer","setAPlayerObserver","document","querySelectorAll","length","forEach","t","meta","id","volantis","GLOBAL_CONFIG","plugins","aplayer","updateTitle","on","updateAPlayerControllerStatus","status","onUpdateAPlayerVolume","volumeBarWrap","getElementsByClassName","children","volumeBar","updateAPlayerVolume","r","classList","remove","removeEventListener","addEventListener","stopPropagation","add","console","log","clientX","changedTouches","getBoundingClientRect","left","clientWidth","Math","max","min","volume","style","width","audio","paused","aplayerToggle","toggle","aplayerBackward","skipBack","play","aplayerForward","skipForward","aplayerVolume","list","index","audios","innerHTML","title","APlayer","Object","freeze","requestAnimationFrame"],"mappings":"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","file":"../../../js/plugins/aplayer.js","sourcesContent":["/**\n * 右键音乐\n * */\nconst RightMenuAplayer = (() => {\n  let playStatus; // 播放器状态\n  const APlayer = {}; // 右键音乐所控制的播放器\n  const fn = {};\n\n  fn.checkAPlayer = () => {\n    if (playStatus === undefined || APlayer.player === undefined) {\n      fn.setAPlayerObject();\n    } else if (APlayer.observer === undefined) {\n      fn.setAPlayerObserver();\n    }\n  }\n\n  // 设置全局播放器所对应的 aplyer 对象\n  fn.setAPlayerObject = () => {\n    let meting = document.querySelectorAll('.footer meting-js');\n    if (meting.length == 0) {\n      meting = document.querySelectorAll('meting-js');\n    }\n    APlayer.player = undefined;\n    meting.forEach((item, index) => {\n      if (item.meta.id == volantis.GLOBAL_CONFIG.plugins.aplayer.id && item.aplayer && APlayer.player === undefined) {\n        APlayer.player = item.aplayer;\n        fn.setAPlayerObserver();\n        fn.updateTitle();\n      }\n    });\n  }\n\n  // 事件监听\n  fn.setAPlayerObserver = () => {\n    try {\n      APlayer.player.on('play', function (e) {\n        fn.updateAPlayerControllerStatus(e);\n        APlayer.status = 'play';\n      });\n      APlayer.player.on('pause', function (e) {\n        fn.updateAPlayerControllerStatus(e);\n        APlayer.status = 'pause';\n      });\n      APlayer.player.on('volumechange', function (e) {\n        fn.onUpdateAPlayerVolume(e);\n      });\n      APlayer.player.on('loadstart', function (e) {\n        fn.updateTitle(e);\n      });\n\n      // 监听音量手势\n      APlayer.volumeBarWrap = document.getElementsByClassName('nav volume')[0].children[0];\n      APlayer.volumeBar = APlayer.volumeBarWrap.children[0];\n\n      const thumbMove = (e) => {\n        fn.updateAPlayerVolume(e);\n      };\n\n      const thumbUp = (e) => {\n        APlayer.volumeBarWrap.classList.remove('aplayer-volume-bar-wrap-active');\n        document.removeEventListener('mouseup', thumbUp);\n        document.removeEventListener('mousemove', thumbMove);\n        fn.updateAPlayerVolume(e);\n      };\n\n      APlayer.volumeBarWrap.addEventListener('mousedown', (event) => {\n        event.stopPropagation();\n        APlayer.volumeBarWrap.classList.add('aplayer-volume-bar-wrap-active');\n        document.addEventListener('mousemove', thumbMove);\n        document.addEventListener('mouseup', thumbUp);\n      });\n\n      APlayer.volumeBarWrap.addEventListener('click', (event) => {\n        event.stopPropagation();\n      });\n\n      fn.updateAPlayerControllerStatus();\n      fn.onUpdateAPlayerVolume();\n      APlayer.observer = true;\n    } catch (error) {\n      console.log(error);\n      APlayer.observer = undefined;\n    }\n  }\n\n  fn.updateAPlayerVolume = (e) => {\n    let percentage = ((e.clientX || e.changedTouches[0].clientX) -\n      APlayer.volumeBar.getBoundingClientRect().left) / APlayer.volumeBar.clientWidth;\n    percentage = Math.max(percentage, 0);\n    percentage = Math.min(percentage, 1);\n    APlayer.player.volume(percentage);\n  }\n\n  fn.onUpdateAPlayerVolume = () => {\n    try {\n      APlayer.volumeBar.children[0].style.width = APlayer.player.audio.volume * 100 + '%';\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // 更新控制器状态\n  fn.updateAPlayerControllerStatus = () => {\n    try {\n      if (APlayer.player.audio.paused) {\n        playStatus = 'pause';\n        document.getElementsByClassName('nav toggle')[0].children[0].classList.add('fa-play');\n        document.getElementsByClassName('nav toggle')[0].children[0].classList.remove('fa-pause');\n      } else {\n        playStatus = 'play';\n        document.getElementsByClassName('nav toggle')[0].children[0].classList.remove('fa-play');\n        document.getElementsByClassName('nav toggle')[0].children[0].classList.add('fa-pause');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // 播放/暂停\n  fn.aplayerToggle = () => {\n    fn.checkAPlayer();\n    try {\n      APlayer.player.toggle();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // 上一曲\n  fn.aplayerBackward = () => {\n    fn.checkAPlayer();\n    try {\n      APlayer.player.skipBack();\n      APlayer.player.play();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // 下一曲\n  fn.aplayerForward = () => {\n    fn.checkAPlayer();\n    try {\n      APlayer.player.skipForward();\n      APlayer.player.play();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // 调节音量\n  fn.aplayerVolume = (percent) => {\n    fn.checkAPlayer();\n    try {\n      APlayer.player.volume(percent);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // 更新音乐标题\n  fn.updateTitle = () => {\n    fn.checkAPlayer();\n    try {\n      const index = APlayer.player.list.index;\n      const obj = APlayer.player.list.audios[index];\n      document.getElementsByClassName('nav music-title')[0].innerHTML = obj.title;\n    } catch (error) {\n      //console.log(error);\n    }\n  }\n\n  return {\n    checkAPlayer: fn.checkAPlayer,\n    aplayerBackward: fn.aplayerBackward,\n    aplayerToggle: fn.aplayerToggle,\n    aplayerForward: fn.aplayerForward,\n    APlayer: APlayer\n  }\n})()\n\nObject.freeze(RightMenuAplayer);\n\nvolantis.requestAnimationFrame(() => {\n  RightMenuAplayer.checkAPlayer();\n});\n"]}
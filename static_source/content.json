{"meta":{"title":"邢平cn's blog","subtitle":"","description":"写一些东西，分享踩过的坑","author":"邢平cn","url":"https://xingpingcn.top","root":"/"},"pages":[{"title":"","date":"2023-04-22T18:34:44.435Z","updated":"2023-04-22T18:34:44.435Z","comments":true,"path":"404.html","permalink":"https://xingpingcn.top/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 请点击主页搜索并查看具体文章（或许是Google搜索出了问题） 也可能是输入地址有误或该地址已被删除 欢迎在评论区留言，或者到我的github主页私信我"},{"title":"","date":"2023-04-21T13:06:25.863Z","updated":"2023-04-21T13:06:25.863Z","comments":true,"path":"google4e035139f56cb1e9.html","permalink":"https://xingpingcn.top/google4e035139f56cb1e9.html","excerpt":"","text":"google-site-verification: google4e035139f56cb1e9.html"},{"title":"","date":"2024-01-31T16:18:21.530Z","updated":"2024-01-31T16:17:18.628Z","comments":true,"path":"style4.css","permalink":"https://xingpingcn.top/style4.css","excerpt":"","text":"#safearea{display:block}:root{--block-hover:#ededed;--text-p1:#222;--text-p3:#777;--card:#fff}::-moz-selection{background:rgba(33,150,243,.2)}::selection{background:rgba(33,150,243,.2)}h1{font-size:1.5rem}h2{font-size:1.5rem}h3{font-size:1.25rem}h4{font-size:1.125rem}h5{font-size:1rem}h6{font-size:1rem}h1,h2,h3,h4,h6{font-weight:400}a:not([href]){cursor:default}pre{tab-size:4;-moz-tab-size:4;-o-tab-size:4;-webkit-tab-size:4}.clearfix{zoom:1}.clearfix:after,.clearfix:before{content:\" \";display:-webkit-box;display:-moz-box;display:table}.clearfix:after{clear:both}.hidden{text-indent:-9999px;visibility:hidden;display:-webkit-box;display:-moz-box;display:none}.inner{position:relative;width:80%;max-width:710px;margin:0 auto}.vertical{display:-webkit-box;display:-moz-box;display:table-cell;vertical-align:middle}article,aside,details,figcaption,figure,footer,hgroup,main,menu,nav,section,summary{display:-webkit-box;display:-moz-box;display:block}article{overflow:hidden}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:50%;line-height:1em}sup{vertical-align:text-top}sub{vertical-align:text-bottom}figure{margin:1em 40px}pre{overflow:auto}span.dot,span.sep{font-size:.9em;margin:0 .2rem}span.dot:before{content:'·'}span.sep:before{content:'/'}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}optgroup,select,textarea{color:inherit;font:inherit;margin:0}select{text-transform:none}html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input[type=checkbox],input[type=radio]{box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;-webkit-box-sizing:content-box;-moz-box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table:not([class]){border-collapse:collapse;overflow:auto;display:-webkit-box;display:-moz-box;display:inline-block;max-width:100%;vertical-align:text-top}table:not([class]) th{background-color:#f1f1f1}table:not([class]) td,table:not([class]) th{padding:8px 16px;border:2px solid #f1f1f1;line-height:1.5;font-size:90%}table:not([class]) tr{word-break:keep-all;background-color:#fefefe;transition:all .28s ease;-webkit-transition:all .28s ease;-khtml-transition:all .28s ease;-moz-transition:all .28s ease;-o-transition:all .28s ease;-ms-transition:all .28s ease}table:not([class]) tr:hover{background-color:#f1f1f1}td,th{padding:0}article#arc,article#cat,article#tag{padding-top:48px;padding-bottom:48px}article#arc h2,article#cat h2,article#tag h2{font-weight:600}article#arc h2:first-child,article#cat h2:first-child,article#tag h2:first-child{margin-top:0}article#arc{margin-bottom:32px;padding-bottom:64px}article#arc .timenode:after,article#arc .timenode:before{margin-left:12px}article#arc .timenode .meta{padding:6px 0;line-height:1.5;height:auto;max-width:100%;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;font-size:.9375rem;font-weight:500;border-radius:2px;-webkit-border-radius:2px;color:var(--color-list)}article#arc .timenode .meta:before{display:-webkit-box;display:-moz-box;display:none}article#arc .timenode .meta:after{margin-left:14px}article#arc .timenode .meta:hover{color:var(--color-p);background:var(--color-site-bg)}article#arc .timenode .meta time{color:var(--color-meta);margin-left:34px;margin-right:4px;flex-shrink:0;width:60px}article#arc .timenode .meta i{line-height:1.5;color:#ff5722}article#arc .timenode .meta i.red{color:#fe5f58}article#arc .timenode .meta i.green{color:#3dc550}article#arc .timenode .meta i.yellow{color:#ffbd2b}article#arc .timenode .meta i.blue{color:#1bcdfc}article#arc .timenode .meta i.theme{color:#3dd9b6}article#arc .timenode .meta i.accent{color:#ff5722}article#arc .timenode .meta i.orange{color:#ff5722}article#cat .all-cats a{display:-webkit-box;display:-moz-box;display:block;padding:8px 16px;border-radius:8px;-webkit-border-radius:8px;color:var(--color-list);font-size:.9375rem;font-weight:500}article#cat .all-cats a:hover{color:var(--color-list-hl);background:var(--color-site-bg)}article#cat .all-cats a.child{padding-left:48px}article#tag .all-tags{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;flex-wrap:wrap;-webkit-flex-wrap:wrap;-khtml-flex-wrap:wrap;-moz-flex-wrap:wrap;-o-flex-wrap:wrap;-ms-flex-wrap:wrap;align-items:flex-start;justify-content:flex-start;-webkit-justify-content:flex-start;-khtml-justify-content:flex-start;-moz-justify-content:flex-start;-o-justify-content:flex-start;-ms-justify-content:flex-start;align-items:baseline;text-align:center}article#tag .all-tags ul{margin:0 -8px;padding:0;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;flex-wrap:wrap;-webkit-flex-wrap:wrap;-khtml-flex-wrap:wrap;-moz-flex-wrap:wrap;-o-flex-wrap:wrap;-ms-flex-wrap:wrap}article#tag .all-tags ul li{list-style:none;margin:8px;border-radius:8px;-webkit-border-radius:8px;overflow:hidden;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;position:relative;font-size:.9375rem}article#tag .all-tags ul li a{display:-webkit-box;display:-moz-box;display:inline-block;color:var(--color-list);padding:4px 52px 4px 16px;background:var(--color-block);font-weight:500}article#tag .all-tags ul li a:hover{background:#ff5722;color:#fff}article#tag .all-tags ul li span{color:var(--color-meta);background:var(--color-card);padding:2px 8px;border-radius:6px;-webkit-border-radius:6px;pointer-events:none;position:absolute;right:2px;top:2px;height:calc(100% - 4px)}article#tag .all-tags ul li span:before{content:'x'}.article{color:var(--color-p);word-wrap:break-word}.article a{word-break:break-word}.article h1.title,.article h2.title{left:0}.article h1.title:before,.article h2.title:before{content:none}.article h1,.article h2{padding-bottom:.2rem;margin-bottom:1rem;border-bottom:1px solid rgba(68,68,68,.1)}.article h1{text-align:left;color:var(--color-h1);margin-top:48px}.article h2{text-align:left;color:var(--color-h2);margin-top:48px}.article h3{text-align:left;color:var(--color-h3);margin-top:24px}.article h4{text-align:left;color:var(--color-h4);margin-top:16px}.article h5{font-weight:700;color:var(--color-h5);margin-top:1em}.article h6{color:var(--color-h6);margin-top:1em}.article center,.article center p{text-align:center}.article .aplayer{margin:1em 0;display:-webkit-box;display:-moz-box;display:inline-block;width:400px;max-width:100%;border-radius:4px;-webkit-border-radius:4px;color:#666}.article div.small-img img,.article p.small-img img{width:auto;max-width:100%;margin:0;box-shadow:none;-webkit-box-shadow:none}.article s{color:#8e8e8e;text-decoration-color:#8e8e8e}.article p{margin-top:1em;margin-bottom:1em;text-align:justify;max-width:100%;line-height:inherit}.article .subtitle h6{color:rgba(68,68,68,.9)}.article figure figcaption span{display:-webkit-box;display:-moz-box;display:inline-block;margin-right:5px}.article blockquote{background:var(--color-block);border-left:8px solid #3dd9b6;border-radius:8px;-webkit-border-radius:8px}.article blockquote{position:relative;width:100%;padding:16px;transition:all .28s ease;-webkit-transition:all .28s ease;-khtml-transition:all .28s ease;-moz-transition:all .28s ease;-o-transition:all .28s ease;-ms-transition:all .28s ease}.article blockquote,.article blockquote ol,.article blockquote p,.article blockquote ul{text-align:left;word-wrap:normal;font-size:.9375rem;margin-top:.5em;margin-bottom:.5em}.article blockquote footer{padding:0;text-align:justify;color:inherit;font-style:italic;margin:1em 0}.article blockquote footer cite{color:var(--color-meta);margin-left:1em}.article blockquote footer cite::before{content:'----';padding:0 .3em}.article blockquote.pullquote.right{border-left:none;border-right:8px solid #3dd9b6}.article blockquote.pullquote.right p{text-align:right}.article pre{display:-webkit-box;display:-moz-box;display:block;-moz-box-sizing:border-box;box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;margin-top:1em;margin-bottom:1em;overflow:auto;background:var(--color-codeblock);font-size:.8125rem;font-family:Menlo,UbuntuMono,Monaco,monospace,courier,sans-serif;border:1px solid #ffebcb;padding:16px;border-radius:8px;-webkit-border-radius:8px}.article pre>code:not([class]){background:0 0}.article div>pre{border-radius:8px;-webkit-border-radius:8px}.article div>pre>code:not([class]){padding:0;margin:0;background:0 0;color:rgba(68,68,68,.9)}.article code{font-family:Menlo,UbuntuMono,Monaco,monospace,courier,sans-serif}.article code:not([class]){word-break:break-all;color:var(--color-inlinecode);border-radius:4px;-webkit-border-radius:4px}@media screen and (max-width:500px){.article ol,.article ul{font-size:.875rem}.article figure{font-size:13px;line-height:1.5}}.article .widget{background:0 0;margin:1em 0;box-shadow:none;-webkit-box-shadow:none;border-radius:8px;-webkit-border-radius:8px;cursor:auto;background:var(--color-block);padding:8px 0;transition:all .28s ease;-webkit-transition:all .28s ease;-khtml-transition:all .28s ease;-moz-transition:all .28s ease;-o-transition:all .28s ease;-ms-transition:all .28s ease;width:100%}.article .widget:hover{box-shadow:none;-webkit-box-shadow:none}.article .widget:active{box-shadow:none;-webkit-box-shadow:none}.article .widget header{padding:4px .6em;padding-bottom:0}.article .widget header,.article .widget header a{color:rgba(68,68,68,.85)}.article .widget.copyright,.article .widget.qrcode{background:0 0;padding:0}.article .widget.copyright header,.article .widget.qrcode header{display:-webkit-box;display:-moz-box;display:none}.article .widget.copyright .content,.article .widget.qrcode .content{padding:0}.article .widget.list .content,.article .widget.related_posts .content{padding:0 .6em!important}.article .widget.list .content a,.article .widget.related_posts .content a{color:#2092ec}.article .widget.list .content a:hover,.article .widget.related_posts .content a:hover{color:#ff5722}.article .widget .content{padding:0 .6em;margin:0}.article .widget .content ul{padding-left:4px;margin-left:16px}.article .widget .content ul a{transition:all .1s ease;-webkit-transition:all .1s ease;-khtml-transition:all .1s ease;-moz-transition:all .1s ease;-o-transition:all .1s ease;-ms-transition:all .1s ease;display:-webkit-box;display:-moz-box;display:inline;border-left:none;padding:0;padding-left:4px;color:#2092ec;font-weight:400;text-decoration:none}.article .widget .content ul a.active,.article .widget .content ul a:active,.article .widget .content ul a:hover{border-left:none!important;background:0 0!important}.article .widget .content ul a:hover{color:#ff5722}.article .widget .content .list a .name{display:-webkit-box;display:-moz-box;display:inline;color:#2092ec}.article .widget .content .list a:hover .name{color:#ff5722}.article .widget.qrcode>.content{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;flex-wrap:wrap;-webkit-flex-wrap:wrap;-khtml-flex-wrap:wrap;-moz-flex-wrap:wrap;-o-flex-wrap:wrap;-ms-flex-wrap:wrap;align-items:center;justify-content:center;-webkit-justify-content:center;-khtml-justify-content:center;-moz-justify-content:center;-o-justify-content:center;-ms-justify-content:center;padding-left:16px;padding-right:16px;margin-bottom:4px}.article .widget.qrcode>.content>.fancybox,.article .widget.qrcode>.content>img{margin:0 8px}.article .widget.qrcode>.content img{margin-bottom:4px}.article .article_footer{margin-top:64px}.article .widget-blur{backdrop-filter:none}.md .footer{margin-top:64px}.md .footer>div{margin-top:1em;margin-bottom:1em}.md .footer .header{line-height:1.75;padding-bottom:8px;font-weight:500;font-size:.875rem;color:var(--color-list)}.md .footer .header i{margin-right:2px}.md .footer .body ol,.md .footer .body ul{margin-top:0;margin-bottom:0}.md .footer .references,.md .footer .related_posts{background:var(--color-block);border-radius:8px;-webkit-border-radius:8px;padding:16px}.md .footer .references .body a{font-size:.9375rem;font-weight:500}.md .footer .related_posts .body{margin:4px;overflow:hidden;border-radius:2px;-webkit-border-radius:2px}.md .footer .related_posts .body .vlts-rps{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex}.md .footer .related_posts .body .vlts-rps .item{flex-shrink:0;width:240px}.md .footer .related_posts .body .vlts-rps .item+.item{margin-left:16px}.md .footer .related_posts .body .vlts-rps img{border-radius:2px;-webkit-border-radius:2px;width:100%;height:120px;object-fit:cover}.md .footer .related_posts .body .vlts-rps span{display:-webkit-box;display:-moz-box;display:block;text-align:justify;display:-webkit-box;display:-moz-box;display:-webkit-box;-webkit-box-orient:vertical;overflow:hidden}.md .footer .related_posts .body .vlts-rps .title{font-weight:600;-webkit-line-clamp:1}.md .footer .related_posts .body .vlts-rps .excerpt{font-size:.875rem;color:var(--color-meta);-webkit-line-clamp:3}.md .footer .copyright blockquote p{font-size:.875rem;margin:.25em 0}.md .footer .copyright blockquote p a{font-weight:500}.md .footer .donate{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;margin:0 auto}.md .footer .donate .imgs{display:-webkit-box;display:-moz-box;display:-ms-inline-flexbox;display:-webkit-inline-flex;display:inline-flex;display:inline-flex;margin:0 auto}.md .footer .donate .imgs .fancybox{margin:8px}.md .footer .donate .imgs img{width:80px}article .readmore{display:-webkit-box;display:-moz-box;display:block;margin-top:24px;font-size:.875rem}.copyright.license{background:var(--color-copyright-bkg);color:var(--color-meta);display:-webkit-box;display:-moz-box;display:block;font-size:.95rem;line-height:1.2;margin:15px -40px;overflow:hidden;padding:1.25em 40px;position:relative;border-radius:4px;-webkit-border-radius:4px}.copyright.license:after{background:url(\"data:image/svg+xml;charset=utf-8,%3Csvg version='1.1' id='Capa_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 367.467 367.467' style='enable-background:new 0 0 367.467 367.467;' xml:space='preserve'%3E%3Cg%3E%3Cpath d='M183.73,0.018C82.427,0.018,0,82.404,0,183.733c0,101.289,82.427,183.716,183.73,183.716 c101.315,0,183.737-82.427,183.737-183.716C367.467,82.404,285.045,0.018,183.73,0.018z M183.73,326.518 c-78.743,0-142.798-64.052-142.798-142.784c0-78.766,64.055-142.817,142.798-142.817c78.752,0,142.807,64.052,142.807,142.817 C326.536,262.466,262.481,326.518,183.73,326.518z'/%3E%3Cpath d='M244.036,217.014c-11.737,20.141-33.562,32.635-56.956,32.635c-36.329,0-65.921-29.585-65.921-65.915 c0-36.36,29.592-65.955,65.921-65.955c23.395,0,45.219,12.54,56.956,32.641l1.517,2.627h44.28l-2.658-7.129 c-7.705-20.413-21.225-37.769-39.122-50.157c-17.942-12.42-39.017-19.009-60.973-19.009c-58.981,0-106.946,48.006-106.946,106.982 c0,58.98,47.965,106.941,106.946,106.941c21.956,0,43.03-6.567,60.973-19.006c17.897-12.391,31.417-29.741,39.122-50.154 l2.658-7.133h-44.28L244.036,217.014z'/%3E%3C/g%3E%3C/svg%3E\");content:\" \";opacity:.1;-webkit-opacity:.1;-moz-opacity:.1;height:180px;right:-10px;top:-35px;width:180px;position:absolute}.copyright.license a{color:var(--color-meta)}.copyright.license a:hover{color:#ff5722}.copyright.license .license-meta-title,.copyright.license .license-title{margin:0 0 .25rem}.copyright.license .license-link,.copyright.license .license-meta-title{font-size:.8rem}.copyright.license .license-title{font-weight:700}.copyright.license .license-link{margin-bottom:1rem}.copyright.license .license-meta{align-items:center;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;flex-wrap:wrap;-webkit-flex-wrap:wrap;-khtml-flex-wrap:wrap;-moz-flex-wrap:wrap;-o-flex-wrap:wrap;-ms-flex-wrap:wrap;justify-content:flex-start;-webkit-justify-content:flex-start;-khtml-justify-content:flex-start;-moz-justify-content:flex-start;-o-justify-content:flex-start;-ms-justify-content:flex-start}.copyright.license .license-meta-item{margin:0 2rem 1em 0}.copyright.license .license-meta-text{margin:0}.copyright.license .license-meta-text a{border-bottom:1px solid var(--color-meta)}.copyright.license .license-meta-text a:hover{border-bottom-color:#ff5722}footer.footer{position:relative;padding:40px 10px 120px 10px;width:100%;color:var(--color-site-footer);margin:0 auto;overflow:hidden;text-align:center}footer.footer,footer.footer p{font-size:.8125rem}footer.footer .licenses{color:fade(,50%)}footer.footer .social-wrapper{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;justify-content:center;-webkit-justify-content:center;-khtml-justify-content:center;-moz-justify-content:center;-o-justify-content:center;-ms-justify-content:center;flex-wrap:wrap;-webkit-flex-wrap:wrap;-khtml-flex-wrap:wrap;-moz-flex-wrap:wrap;-o-flex-wrap:wrap;-ms-flex-wrap:wrap;margin:4px 8px}footer.footer a{color:var(--color-site-footer);padding:0;transition:all .28s ease;-webkit-transition:all .28s ease;-khtml-transition:all .28s ease;-moz-transition:all .28s ease;-o-transition:all .28s ease;-ms-transition:all .28s ease}footer.footer a:hover{color:#ff5722}footer.footer a:not(.social):hover{text-decoration:underline}footer.footer a.social{position:relative;display:-webkit-box;display:-moz-box;display:inline-block;text-align:center;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;justify-content:center;-webkit-justify-content:center;-khtml-justify-content:center;-moz-justify-content:center;-o-justify-content:center;-ms-justify-content:center;align-items:center;min-width:36px;min-height:36px;margin:4px;opacity:.75;-webkit-opacity:.75;-moz-opacity:.75;border-radius:4px;-webkit-border-radius:4px;font-size:1rem}footer.footer a.social img{margin:8px;height:24px}footer.footer a.social:hover{color:#ff5722;background:rgba(255,87,34,.1)}footer.footer .copyright{margin-top:16px}footer.footer .copyright p{font-size:.78125rem}@media screen and (max-width:768px){footer.footer{justify-content:center;-webkit-justify-content:center;-khtml-justify-content:center;-moz-justify-content:center;-o-justify-content:center;-ms-justify-content:center}}.article.l_friends .friends-group .friend-content{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;flex-wrap:wrap;-webkit-flex-wrap:wrap;-khtml-flex-wrap:wrap;-moz-flex-wrap:wrap;-o-flex-wrap:wrap;-ms-flex-wrap:wrap;margin:-8px;border-radius:8px;-webkit-border-radius:8px;align-items:flex-start;line-height:1.3}.article.l_friends .friends-group .friend-content .friend-card{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;border-radius:8px;-webkit-border-radius:8px;box-shadow:0 1px 2px 0 rgba(0,0,0,.1);-webkit-box-shadow:0 1px 2px 0 rgba(0,0,0,.1);padding:8px 0;margin:8px;margin-top:calc(2.25 * 16px + 32px);color:var(--color-meta);background:var(--color-block);justify-content:flex-start;-webkit-justify-content:flex-start;-khtml-justify-content:flex-start;-moz-justify-content:flex-start;-o-justify-content:flex-start;-ms-justify-content:flex-start;align-content:flex-start;-webkit-box-direction:normal;-moz-box-direction:normal;-webkit-box-orient:vertical;-moz-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;width:calc(100%/4 - 16px)}@media screen and (max-width:1024px){.article.l_friends .friends-group .friend-content .friend-card{width:calc(100%/4 - 16px)}}@media screen and (max-width:768px){.article.l_friends .friends-group .friend-content .friend-card{width:calc(100%/3 - 16px)}}@media screen and (max-width:500px){.article.l_friends .friends-group .friend-content .friend-card{width:calc(100%/2 - 16px)}}.article.l_friends .friends-group .friend-content .friend-card:hover .friend-left .avatar{transform:scale(1.2) rotate(12deg);-webkit-transform:scale(1.2) rotate(12deg);-khtml-transform:scale(1.2) rotate(12deg);-moz-transform:scale(1.2) rotate(12deg);-o-transform:scale(1.2) rotate(12deg);-ms-transform:scale(1.2) rotate(12deg);box-shadow:0 2px 4px 0 rgba(0,0,0,.1),0 4px 8px 0 rgba(0,0,0,.1),0 8px 16px 0 rgba(0,0,0,.1);-webkit-box-shadow:0 2px 4px 0 rgba(0,0,0,.1),0 4px 8px 0 rgba(0,0,0,.1),0 8px 16px 0 rgba(0,0,0,.1)}.article.l_friends .friends-group .friend-content .friend-card .friend-left{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;align-self:center}.article.l_friends .friends-group .friend-content .friend-card .friend-left .avatar{width:64px;height:64px;transition:all .28s ease;-webkit-transition:all .28s ease;-khtml-transition:all .28s ease;-moz-transition:all .28s ease;-o-transition:all .28s ease;-ms-transition:all .28s ease;box-shadow:0 1px 2px 0 rgba(0,0,0,.1);-webkit-box-shadow:0 1px 2px 0 rgba(0,0,0,.1);margin:16px 8px 4px 8px;margin-top:calc(-1.25 * 16px - 32px);border-radius:100%;-webkit-border-radius:100%;border:2px solid #fff;background:#fff}.article.l_friends .friends-group .friend-content .friend-card .friend-right{margin:4px 8px;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;display:flex;-webkit-box-direction:normal;-moz-box-direction:normal;-webkit-box-orient:vertical;-moz-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;text-align:center}.article.l_friends .friends-group .friend-content .friend-card .friend-right p{text-align:center}.article.l_friends .friends-group .friend-content .friend-card .friend-right .friend-tags-wrapper{transition:all .28s ease;-webkit-transition:all .28s ease;-khtml-transition:all .28s ease;-moz-transition:all .28s ease;-o-transition:all .28s ease;-ms-transition:all .28s ease;margin-left:-2px;word-break:break-all}.article.l_friends .friends-group .friend-content .friend-card .friend-right p{margin:0}.article.l_friends .friends-group .friend-content .friend-card .friend-right p.friend-name{font-size:.8125rem;padding-top:4px;font-weight:700}.article.l_friends .friends-group .friend-content .friend-card .friend-right p.tags{font-size:.78125rem;display:-webkit-box;display:-moz-box;display:inline;background:0 0;word-wrap:break-word;padding-right:4px}.md img{position:relative;transition:all .28s ease;-webkit-transition:all .28s ease;-khtml-transition:all .28s ease;-moz-transition:all .28s ease;-o-transition:all .28s ease;-ms-transition:all .28s ease}@media screen and (max-width:500px){.md img{box-shadow:none;-webkit-box-shadow:none}}.md a>img,.md div>img,.md p>img{display:-webkit-box;display:-moz-box;display:block;margin:auto;border-radius:4px;-webkit-border-radius:4px}@media screen and (max-width:500px){.md a>img,.md div>img,.md p>img{border-radius:4px;-webkit-border-radius:4px}}.md span img{display:-webkit-box;display:-moz-box;display:inline;margin:auto}.md .img-wrap{margin:1.5rem auto;text-align:center;border-radius:4px;-webkit-border-radius:4px;overflow:hidden}.md .img-wrap .img-bg{width:100%}.md .img-wrap .image-caption{display:-webkit-box;display:-moz-box;display:block;margin:.75rem auto;font-size:.8125rem;color:var(--color-meta)}.md .img-wrap .image-caption:empty{display:-webkit-box;display:-moz-box;display:none}svg.loading{display:-webkit-box;display:-moz-box;display:block;position:absolute;color:var(--text-p3);width:100%;height:2rem;margin:auto;animation:spin infinite 2s;-webkit-animation:spin infinite 2s;-khtml-animation:spin infinite 2s;-moz-animation:spin infinite 2s;-o-animation:spin infinite 2s;-ms-animation:spin infinite 2s;animation-timing-function:linear}@-moz-keyframes spin{from{transform:rotate(0);-webkit-transform:rotate(0);-khtml-transform:rotate(0);-moz-transform:rotate(0);-o-transform:rotate(0);-ms-transform:rotate(0)}to{transform:rotate(360deg);-webkit-transform:rotate(360deg);-khtml-transform:rotate(360deg);-moz-transform:rotate(360deg);-o-transform:rotate(360deg);-ms-transform:rotate(360deg)}}@-webkit-keyframes spin{from{transform:rotate(0);-webkit-transform:rotate(0);-khtml-transform:rotate(0);-moz-transform:rotate(0);-o-transform:rotate(0);-ms-transform:rotate(0)}to{transform:rotate(360deg);-webkit-transform:rotate(360deg);-khtml-transform:rotate(360deg);-moz-transform:rotate(360deg);-o-transform:rotate(360deg);-ms-transform:rotate(360deg)}}@-o-keyframes spin{from{transform:rotate(0);-webkit-transform:rotate(0);-khtml-transform:rotate(0);-moz-transform:rotate(0);-o-transform:rotate(0);-ms-transform:rotate(0)}to{transform:rotate(360deg);-webkit-transform:rotate(360deg);-khtml-transform:rotate(360deg);-moz-transform:rotate(360deg);-o-transform:rotate(360deg);-ms-transform:rotate(360deg)}}@keyframes spin{from{transform:rotate(0);-webkit-transform:rotate(0);-khtml-transform:rotate(0);-moz-transform:rotate(0);-o-transform:rotate(0);-ms-transform:rotate(0)}to{transform:rotate(360deg);-webkit-transform:rotate(360deg);-khtml-transform:rotate(360deg);-moz-transform:rotate(360deg);-o-transform:rotate(360deg);-ms-transform:rotate(360deg)}}#safearea{margin:16px 16px 0}#l_body{position:relative;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}#l_body div.loading{margin:16px 0;width:100%;display:-webkit-box;display:-moz-box;display:block}#l_body div.loading,#l_body div.loading p{text-align:center}#l_body #s-top{transition:all .6s ease;-webkit-transition:all .6s ease;-khtml-transition:all .6s ease;-moz-transition:all .6s ease;-o-transition:all .6s ease;-ms-transition:all .6s ease;z-index:9;position:fixed;width:48px;height:48px;line-height:48px;border-radius:100%;-webkit-border-radius:100%;bottom:32px;right:32px;transform:translateY(100px) scale(0);-webkit-transform:translateY(100px) scale(0);-khtml-transform:translateY(100px) scale(0);-moz-transform:translateY(100px) scale(0);-o-transform:translateY(100px) scale(0);-ms-transform:translateY(100px) scale(0);transform-origin:bottom;-webkit-transform-origin:bottom;-khtml-transform-origin:bottom;-moz-transform-origin:bottom;-o-transform-origin:bottom;-ms-transform-origin:bottom;color:var(--color-text)}@media screen and (max-width:768px)"},{"title":"关于本站和我","date":"2024-02-21T15:16:09.739Z","updated":"2024-02-21T15:16:09.739Z","comments":true,"path":"about/index.html","permalink":"https://xingpingcn.top/about/index.html","excerpt":"","text":"关于网站本站分享一些各方面踩过的坑（不是什么突破性的成就，也可能不是成功经验，而是一些失败过的经验），为有相似经历的人提供参考，共同学习；一些笔记、随笔、研究成果。 记事 2023-11-15|使用umami进行统计 抛弃了GA4和百度统计，使用umami进行统计，公开统计信息在这里umami部署在vercel数据库使用yugabyte。免费10g，15个同时连接（所以访问的多的话会显示错误） 2023-04|建站时间 本站建于2023-04 友链友链/friends 关于我喜欢分享踩过的坑，热爱社会科学和计算机技术。 不是程序员，专业也不是工科。 写在最后欢迎在评论区评论，或者Email我，基本上都会回复。"},{"title":"所有分类","date":"2023-04-19T17:00:58.363Z","updated":"2023-04-19T17:00:44.816Z","comments":true,"path":"categories/index.html","permalink":"https://xingpingcn.top/categories/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2023-12-23T13:54:10.195Z","updated":"2023-12-23T13:54:10.195Z","comments":true,"path":"friends/index.html","permalink":"https://xingpingcn.top/friends/index.html","excerpt":"","text":"朋友们 申请友链需要满足以下全部条件 首先将本站https://xingpingcn.top/添加至你的友链中本站信息地址：https://xingpingcn.top/截图：https://jsd.onmicrosoft.cn/npm/p-hosting-for-xp@1.0.25/20230508/Snipaste_2023-05-08_00-59-44.2lzfpy52dcu0.webp作者：邢平cn 合法的、非营利性、无商业广告、无木马植入 有实质性原创内容的 HTTPS 站点，发布过至少 5 篇原创文章，内容题材不限 有独立域名，非免费域名 博客已运行至少半年，非刚搭建好 看我心情 申请友链方式到以下地址提交issue，请务必按照issue模板说明填写。 申请友链链接https://github.com/xingpingcn/friends/issues"},{"title":"所有标签","date":"2023-04-18T13:29:16.666Z","updated":"2023-04-18T13:29:16.666Z","comments":true,"path":"tags/index.html","permalink":"https://xingpingcn.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"尝试在闲置的surface pro 4上运行安卓应用","slug":"try-to-run-apk-on-sp4","date":"2024-02-17T13:25:52.177Z","updated":"2024-02-17T14:14:51.110Z","comments":true,"path":"try-to-run-apk-on-sp4.html","link":"","permalink":"https://xingpingcn.top/try-to-run-apk-on-sp4.html","excerpt":"目前的结论是能在使用触屏的同时运行安卓应用，也仅仅是能用。","text":"目前的结论是能在使用触屏的同时运行安卓应用，也仅仅是能用。 目前尝试过几种方案 fydo os blissos Ubuntu+anbox fydo os我只使用过免费版，目前体验下来是最流畅的，也是最不需要折腾的，但是目前免费版没触屏。遗憾 blissos装上之后触屏时有时无，而在有的时候只是拙劣的鼠标点击模拟，基本的多指操作和滑动功能都没有，流畅度还不如fydo os，出的这个surface专版感觉就是纯粹让ppt好看些。 Ubuntu+anbox最后只能尝试在Linux上运行安卓了。 我装的是LTS 22，安装好系统后还得找hy2能用的客户端（因为要去GitHub下资源），一番折腾后找到了nekoray这个带GUI的客户端（因为这个时候sing-box，clashmeta还有hy2官方都没有Linux GUI，而且路由配置还非常麻烦，没现成的作业可以抄），而nekoray后端用的就是sing-box，可惜nekoray自带广告。 之后刷入Surface Linux Kernel，触屏是有了，也仅仅是能用的程度，不太跟手，和win下的体验差太多。 之后安装anbox，一开始闪退，最后发现不是配置有问题，而是不支持5.17以上内核，安装Surface Linux Kernel的时候已经默认安装目前最新的6.6版本了，理论上降级是能用的，但是不知道修改过的Surface Linux Kernel能不能用，我也懒得再降级了。马上花10分钟打开PE滚回去windows。","categories":[],"tags":[]},{"title":"docker学习笔记","slug":"docker-learning-notes","date":"2024-02-04T13:34:39.766Z","updated":"2024-02-21T14:19:55.895Z","comments":true,"path":"docker-learning-notes.html","link":"","permalink":"https://xingpingcn.top/docker-learning-notes.html","excerpt":"这是一篇通过配置hysteria2学习docker-compose的笔记","text":"这是一篇通过配置hysteria2学习docker-compose的笔记 前言用官方的docker和配置3分钟就搭好了，但是想试试通过bridge和通过nginx反代来实现（最后没有实验），于是就开始了折腾，，， docker的network模式docker会隔离文件、网络、进程，而网络的隔离程度分为4种： host 这个相当于和主机共用一个网络 none 容器不需要内部和外部网络 container 似乎是容器内的网络，和主机分离。 bridge 命令docker network create的默认模式，连接到该网络的容器可以互相连通，而且可以暴露端口给主机和主机通讯。客户端通过主机ip:port访问。 NOTEdocker默认创建除container的三个网络。可以通过docker network ls查看。 bash123456root@:/bin/hy2# docker network lsNETWORK ID NAME DRIVER SCOPEc069db7ead85 bridge bridge localcf668a8174a8 host host local162c8b1b3229 nginx-proxy bridge local # `nginx-proxy`是我自己创建的。4f9ce671d49a none null local NOTE值得注意的是，docker默认创建一个名为docker0的网口用于连接主机和容器。通过ip link查看进入hy2容器执行ip link命令可以看到，hy2的网卡（eth0）是和主机上的veth6f76815虚拟网卡连接（240:241） bash12345678910111213141516171819202122root@445:/bin/hy2# ip link1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:002: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000 link/ether [隐私删除] brd ff:ff:ff:ff:ff:ff altname enp0s3 altname ens33: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default link/ether 02:42:4e:38:4d:51 brd ff:ff:ff:ff:ff:ff12: br-162c8b1b3229: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP mode DEFAULT group default link/ether 02:42:93:b0:6a:4a brd ff:ff:ff:ff:ff:ff223: veth3452fbb@if222: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-162c8b1b3229 state UP mode DEFAULT group default link/ether d2:85:53:63:a1:76 brd ff:ff:ff:ff:ff:ff link-netnsid 0241: veth6f76815@if240: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-162c8b1b3229 state UP mode DEFAULT group default link/ether aa:e0:71:cf:9e:50 brd ff:ff:ff:ff:ff:ff link-netnsid 1root@445:/bin/hy2# docker exec -it hy2 /bin/bash1cb800f27bd1:/# ip link1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00240: eth0@if241: &lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN&gt; mtu 1500 qdisc noqueue state UP link/ether 02:42:ac:14:00:03 brd ff:ff:ff:ff:ff:ff1cb800f27bd1:/# 配置hy2的yaml官方的yaml是使用的host模式，我现在要创建一个名为nginx-proxy的网络并且在配置文件中更改。 yml123456789101112131415161718192021version: &quot;3.9&quot;services: hysteria: image: tobyxdd/hysteria container_name: hy2 restart: always volumes: - acme:/acme - ./hysteria.yaml:/etc/hysteria.yaml command: [&quot;server&quot;, &quot;-c&quot;, &quot;/etc/hysteria.yaml&quot;] networks: - nginx-proxy ports: - &quot;10808:443&quot; # expose: # - &quot;443&quot;networks: nginx-proxy: external: truevolumes: acme: 这样我以为就可以通过访问10808端口科学上网了。但是ping不通，，， 经过努力的排查，找到了docker inspect命令，发现容器被分配的IP是空的，，， 原来还需要手动通过输入docker network connect来连接，，，我看nginx是自动连接的，不知道对应的yaml怎么写。 结果还是是ping不通，，， 用iptables -t nat -nvL --line-number查看发现，Chain DOCKER里也有容器IP的DNAT了，为什么还是不行。 不细心眼力不好还发现不了，是暴露端口的时候默认暴露tcp，，，。结合hy2文档也知道hy2是基于udp的，然后更改配置 yml12345services: hysteria: ports: - &quot;10808:443/udp&quot; ... 成功！ 但是关闭连接的时候就会出错再也连不上，通过日志发现，原来关闭的时候通过tcp沟通的。 最终的配置文档应该像这样的 yml123456services: hysteria: ports: - &quot;10808:443/udp&quot; - &quot;10808:443/tcp&quot; ... 最后删除多余的NAT，和设置新的NAT，并备份iptables warningiptables-save -f /etc/iptables/rules.v4适用于Debian，其他系统可能会恢复不了iptables bash1234iptables -t nat -D PREROUTING 1iptables -t nat -A PREROUTING -i eth0 -p udp --dport 20000:50000 -j DNAT --to-destination :10808iptables-save -f /etc/iptables/rules.v4systemctl restart iptables nginx初次使用由于nginx运行在docker内，而每个docker都会被network的虚拟网关分配一个ip，如果nginx要反代同一network内的docker container是不是就要预先知道它的ip呢？这样做其实也可以，但是如果机器重启就会出问题，因为重启后每个容器的ip会被重新分配，分配的规则我猜测是根据启动顺序来决定的。更优雅的方式是直接使用container的别名作为ip。 例如在同一网络内有两个container，别名分别为nginx_test和api，则nginx_test的反代配置应该是类似于这样的。 .conf1234567server &#123; listen 80; server_name localhost; location /api &#123; proxy_pass http://api:3000; &#125;&#125;","categories":[],"tags":[]},{"title":"免费通过NS1利用监控宝平台实现实时基于不同运营商的故障转移","slug":"免费通过NS1利用监控宝平台实现实时基于不同运营商的故障转移","date":"2023-10-27T13:14:57.449Z","updated":"2024-02-07T05:18:14.062Z","comments":true,"path":"免费通过NS1利用监控宝平台实现实时基于不同运营商的故障转移.html","link":"","permalink":"https://xingpingcn.top/%E5%85%8D%E8%B4%B9%E9%80%9A%E8%BF%87NS1%E5%88%A9%E7%94%A8%E7%9B%91%E6%8E%A7%E5%AE%9D%E5%B9%B3%E5%8F%B0%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E5%9F%BA%E4%BA%8E%E4%B8%8D%E5%90%8C%E8%BF%90%E8%90%A5%E5%95%86%E7%9A%84%E6%95%85%E9%9A%9C%E8%BD%AC%E7%A7%BB.html","excerpt":"本教程用到的资源全部都是免费且可持续使用的。NS1.com这个权威DNS服务器能根据ASN、国家或省份、DNS轮询（可加权）等方式解析域名，并且提供了API去控制某个解析（answer）是否响应。监控宝能实时监控网站（通过HTTP、PING、DNS方式等）并输出警告（webhook、Email、短信等），最高监控频率为2分钟。亚马逊的AWS Lambda是一个FaaS平台（serverless），可以作为连接NS1.com和监控宝之间的桥梁，当监控宝检测到网站速度变慢的时候发送信息到AWS Lambda，AWS Lambda得到信息后再传递给NS1.com，速度恢复的时候也是同样的操作。为什么要夹在一个AWS Lambda呢？这是因为监控宝发送的格式是固定的，并不能直接接入到NS1.com。","text":"本教程用到的资源全部都是免费且可持续使用的。NS1.com这个权威DNS服务器能根据ASN、国家或省份、DNS轮询（可加权）等方式解析域名，并且提供了API去控制某个解析（answer）是否响应。监控宝能实时监控网站（通过HTTP、PING、DNS方式等）并输出警告（webhook、Email、短信等），最高监控频率为2分钟。亚马逊的AWS Lambda是一个FaaS平台（serverless），可以作为连接NS1.com和监控宝之间的桥梁，当监控宝检测到网站速度变慢的时候发送信息到AWS Lambda，AWS Lambda得到信息后再传递给NS1.com，速度恢复的时候也是同样的操作。为什么要夹在一个AWS Lambda呢？这是因为监控宝发送的格式是固定的，并不能直接接入到NS1.com。 前言需要用到的工具和技能有： 工具和技能NS1.com。免费一个Filter Chain。Filter Chain就是根据不同条件进行响应的工具。监控宝国际版。国际版可以用中国大陆和海外的手机号注册，同样可以用国内电信、移动、联通、教育网的监控节点。免费5个网站监控。AWS Lambda。注册使用可能需要visa银行卡或其他银行卡验证。每月一百万次调用。一点点耐心。一点点点python技术。 NS1.com使用教程Filter Chain的使用NS1.COM官方文档|Filter Chain使用示例https://help.ns1.com/hc/en-us/articles/360020683013 顾名思义就是不断地过滤不符合条件的answer，直到链（Chain）的结尾就是要返回给用户的解析结果。 因此每个过滤器的顺序十分重要（这一点官方文档写到比较隐晦，但是十分重要） 一般而言，以Up开头，Select First N结尾。前者代表是否开启该answer，我们使用监控包如果发现网站速度过慢则可以设置为Up: False；后者表示假如链（Chain）的结尾有多个answer，则返回前N个answer，默认N为1。可以通过调整Priority调整优先级。 这是我的设置 Filter Chain 建议勾选对应的复选框。因为每个人的设置不一样，请仔细阅读说明决定是否勾选！ 之后我们要根据不同的运营商或者国家地区来返回DNS解析结果。因为NS1没有提供国内运营商的分类，但是提供了ASN来分类。我写了个爬虫小脚本，爬取不同运营商的ASN，使用以下这个项目获取，然后填入到对应区域。 中国大陆ASNhttps://github.com/xingpingcn/china-mainland-asn 我是创建了answer group来分类不同的运营商的。 answer设置 你也可以使用自动化工具来定时更新ASN。使用到的工具有aws lambda（下文有介绍）和aws cloud bridge的定时器（需自行配置），例如每隔10更新一次。 python123456789101112131415161718192021222324import requests# key为你的ns1 feed label；value为下载asn列表用到的url的一部分，一般情况下不需要修改asn_dict = &#123; &#x27;dianxin&#x27;:&#x27;chinanet&#x27;, &#x27;yidong&#x27;:&#x27;cmcc&#x27;, &#x27;liantong&#x27;:&#x27;unicom&#x27; &#125;ns1_api_key = &#x27;&#x27;source_id = &#x27;&#x27;ns1_req_url = f&#x27;https://api.nsone.net/v1/feed/&#123;source_id&#125;&#x27;headers = &#123; &quot;X-NSONE-Key&quot;:f&quot;&#123;ns1_api_key&#125;&quot;&#125;for ns1_asn_label, gh_asn in asn_dict.items(): url_to_down = f&#x27;https://raw.githubusercontent.com/xingpingcn/china-mainland-asn/main/asn_txt/&#123;gh_asn&#125;.txt&#x27; response = requests.get(url_to_down).text asn_list_from_gh = response.split(&#x27;\\n&#x27;)[1].split(&#x27;,&#x27;) data = &#123; f&quot;&#123;ns1_asn_label&#125;&quot;:&#123;&quot;asn&quot;:asn_list_from_gh&#125; &#125; res = requests.post(ns1_req_url,headers=headers,json=data) print(res.status_code) 之后可以选择country为CN的answer作为未命中规则的备选。之后再填写一个只有Up的answer作为除中国之外全球的DNS解析结果。 强烈建议如果你使用render、railway、cf、cyclic、zeabur等托管你的网站，除中国之外全球的DNS解析结果是必须配置的，此设置用于ssl证书的申请。建议设置为加权的DNS轮询（此方法似乎对于netlify有点水土不服，因为只要DNS没解析到netlify就暂停ssl证书。其他的只要认证了网站就可以用一段时间，一般是3个月，下一个3个月会重新申请，认证一次不过会自动重试几次；成功一次就可以继续用3个月） 建议国内少用country，因为不太准 NS1 API的使用设置DNSNS1.COM官方文档|NS1 data feed创建https://help.ns1.com/hc/en-us/articles/360020474154-Create-a-data-feed 根据图的指引创建data source和data feed。详细看官方文档。 NS1 API的使用 可以看到上面的图，在answer里已经设置好了关联的data feed了（绿色箭头表示开启，红色表示关闭）；先关联，之后我们会通过AWS Lambda来控制的。关联的data feed详细操作看官方文档。 NS1.COM官方文档|answer关联data feedhttps://help.ns1.com/hc/en-us/articles/360020471154-Automatic-failover answer关联data feed 编写feed更改请求-pythonNS1 API官方文档|修改data feedhttps://ns1.com/api?docId=2188 我们可以编写python以请求API来更改UP的状态。之后我们会把代码放到AWS Lambda来控制的。 注意填写必要的信息。 参数设置status为True是开启，False是关闭。source_id和label就是上面图中提到要记住的内容。ns1_api_key需要自己到设置里申请。建议只开启必要的权限。设置`KEY`点击右上角的settings里的users&amp;teams python123456789101112131415import requestsstatus = Truesource_id = &#x27;&#x27;label=&#x27;&#x27;ns1_api_key = &#x27;&#x27;url = f&#x27;https://api.nsone.net/v1/feed/&#123;source_id&#125;&#x27;headers = &#123; &quot;X-NSONE-Key&quot;:f&quot;&#123;ns1_api_key&#125;&quot;&#125;data = &#123; f&quot;&#123;label&#125;&quot;:&#123;&quot;up&quot;:status&#125;&#125;res = requests.post(url,headers=headers,json=data) 使用AWS LambdaAWS Lambda支持python且可以通过各种条件来触发，现在我们用监控平台（本教程用的监控宝）的webhook来触发，发送POST请求到NS1来更新answer状态。 创建函数点击创建函数——填写信息——点击高级设置 授权类型选NONE，勾选配置跨源资源共享(CORS) 监控宝官方文档|回调url实例https://help.cloudwise.com/help/38/39/520 如果里选择使用监控宝，那么填入以下代码 ↓ 参数设置url_token填写监控宝里回调url里的回调token。如果没有监控宝还没有设置，不要紧回来再弄。其他参数请看这里其中status会根据监控宝的状态自动设置。 python1234567891011121314151617181920212223242526272829303132333435import requestsimport base64import hashlibimport jsonsource_id = &#x27;&#x27;label=&#x27;&#x27;status = Truens1_api_key = &#x27;&#x27;url_token = &#x27;&#x27; #回调tokendef g_md5(content): md5hash = hashlib.md5(content) md5 = md5hash.hexdigest() return md5def lambda_handler(event, context): json_data = json.loads(event[&#x27;body&#x27;]) verify = str(json_data[&#x27;msg_id&#x27;])+str(json_data[&#x27;task_id&#x27;])+str(json_data[&#x27;fault_time&#x27;])+url_token md5 = g_md5(verify.encode(&#x27;utf-8&#x27;)) if md5==json_data[&#x27;token&#x27;]: if json_data[&#x27;message_status&#x27;] == 1 or json_data[&#x27;message_status&#x27;] == &#x27;1&#x27;: status = False elif json_data[&#x27;message_status&#x27;] == 2 or json_data[&#x27;message_status&#x27;] == &#x27;2&#x27;: status = True url = f&#x27;https://api.nsone.net/v1/feed/&#123;source_id&#125;&#x27; headers = &#123; &quot;X-NSONE-Key&quot;:f&quot;&#123;ns1_api_key&#125;&quot; &#125; data = &#123; f&quot;&#123;label&#125;&quot;:&#123;&quot;up&quot;:status&#125; &#125; res = requests.post(url,headers=headers,json=data) print(res.text,f&#x27;[status] \\&#x27;up\\&#x27;: &#123;status&#125;&#x27;) 这里不得不吐槽一句监控宝，回调url设置中的测试发送的json和实际应用中发送的json不一样的，如果发现测试报错请使用正常监控方式来测试 记得点击deploy！ 设置层（layers）因为AWS Lambda默认不能使用第三方库，因为用到了requests库，所以要自己上传requests库。或者你也可以自己用python原生库重写。 AWS官方文档|为依赖项创建Python层https://docs.aws.amazon.com/zh_cn/lambda/latest/dg/python-package.html#python-package-dependencies-layers requests.zip可以根据官方文档自己生成，也可以上传我制作的requests.zip 下载|下载-GitHub|下载-备用 之后设置函数的层（layers），选择我们上传的requests.zip包。 使用监控平台类似的平台还有观测云，免费版最高30分钟的检测频率，20万次访问每天好像是，节点11个，3网都有。 或者可以破解一些免费测速网站的js。 warning监控宝似乎在14天试用期之后直接封我号了，发两份邮件也不回，建议改用观测云，配置都是差不多的。 监控宝 点击查看，但是不建议 监控宝可以使用回调url（webhook）来传递信息，设置如下图。 回调url就填写AWS Lambda提供的url AWS Lambda 回调url 之后创建监控任务，记得在Webhook通知那里选择你的回调url。 监控宝官方文档|回调url实例https://help.cloudwise.com/help/38/39/520 观测云aws lambda填入以下代码 python12345678910111213141516171819202122232425262728import jsonimport requestssource_id = &#x27;&#x27;ns1_api_key = &#x27;&#x27;def lambda_handler(event, context): # print(event,type(event)) json_data = json.loads(event[&#x27;body&#x27;]) if json_data[&#x27;isp&#x27;] == &#x27;telecom&#x27;: label = &#x27;dianxin&#x27; # ns1的feed label，下同 elif json_data[&#x27;isp&#x27;] == &#x27;unicom&#x27;: label = &#x27;liantong&#x27; elif json_data[&#x27;isp&#x27;] == &#x27;cmcc&#x27;: label = &#x27;yidong&#x27; if json_data[&#x27;df_status&#x27;] == &#x27;critical&#x27;: status = False else: status = True url = f&#x27;https://api.nsone.net/v1/feed/&#123;source_id&#125;&#x27; headers = &#123; &quot;X-NSONE-Key&quot;:f&quot;&#123;ns1_api_key&#125;&quot; &#125; data = &#123; f&quot;&#123;label&#125;&quot;:&#123;&quot;up&quot;:status&#125; &#125; res = requests.post(url,headers=headers,json=data) print(res.text,f&#x27;[status] &#123;label&#125; -&gt; \\&#x27;up\\&#x27;: &#123;status&#125;&#x27;) 观测云平台配置 观测云平台配置 观测云平台配置","categories":[],"tags":[]},{"title":"国内各个as自治系统[转]","slug":"国内各个as系统","date":"2023-10-14T14:21:10.040Z","updated":"2023-10-18T08:13:51.067Z","comments":true,"path":"国内各个as系统.html","link":"https://www.gd1214b.icu/post/qfDddx_kZ/","permalink":"https://xingpingcn.top/%E5%9B%BD%E5%86%85%E5%90%84%E4%B8%AAas%E7%B3%BB%E7%BB%9F.html","excerpt":"国内至国际骨干 ISP 线路整理 电信的163骨干网自治系统编号 AS4134；电信的CN2骨干网自治系统编号 AS4809 联通的169骨干网自治系统编号 AS4837；联通的A网骨干网自治系统编号 AS9929 移动的CMNET境内骨干网自治系统编号 AS9808；移动的CMI境外骨干网自治系统编号 AS58453 CERNET骨干网自治系统编号 AS4538；CSTNET骨干网自治系统编号 AS7497","text":"国内至国际骨干 ISP 线路整理 电信的163骨干网自治系统编号 AS4134；电信的CN2骨干网自治系统编号 AS4809 联通的169骨干网自治系统编号 AS4837；联通的A网骨干网自治系统编号 AS9929 移动的CMNET境内骨干网自治系统编号 AS9808；移动的CMI境外骨干网自治系统编号 AS58453 CERNET骨干网自治系统编号 AS4538；CSTNET骨干网自治系统编号 AS7497","categories":[],"tags":[]},{"title":"npm图床（不需要本地部署）","slug":"npm图床（不需要本地部署）","date":"2023-09-30T16:46:24.404Z","updated":"2023-09-30T19:51:32.705Z","comments":true,"path":"npm图床（不需要本地部署）.html","link":"","permalink":"https://xingpingcn.top/npm%E5%9B%BE%E5%BA%8A%EF%BC%88%E4%B8%8D%E9%9C%80%E8%A6%81%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%EF%BC%89.html","excerpt":"本篇意在建立一个上传到GitHub repo自动发布package到npm空间的npm图床","text":"本篇意在建立一个上传到GitHub repo自动发布package到npm空间的npm图床 前言本篇为picture-bed-using-freecdn脚本的教程之一。脚本意在提高静态博客的cdn稳定性。 picture-bed-using-freecdnhttps://github.com/xingpingcn/picture-bed-use-freecdn 脚本的另一篇使用教程在这里 [使用freecdn-js提高hexo博客的cdn稳定性] 建立用于储存图片等静态资源的npm图床可以放置js、css、图片（最好带上hash）等不经常变动的资源。 准备工作准备工作网上有很多教程，这里不重复造轮子。请搜索“npm图床” 需要： npm账号，创建一个token； GitHub账号：创建一个repo，并在repo的setting创建一个名为NPM_TOKEN的secrets，值为上面的token。 添加NPM_TOKEN 创建package.json该文件指定了要上传的图床的名字和图床版本（不需要事先在npm空间创建一个空的package）；其中名字不能和现有的package重复，所以写的尽量长。 package.json123456&#123; &quot;name&quot;: &quot;&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;DO STUFF&quot;, &quot;author&quot;: &quot;XDF&quot;&#125; 看好名称写就行，version尽量和我一样就行。 创建GitHub actionGitHub action可以在你把文件push或者release到repo时自动执行自定义命令，这里我们让他自动把我们push的图片发布到npm空间，使资源能通过npm cdn访问。 在reop的上方点击Action，然后点击new workflow，之后点击set up a workflow yourself ，名字随便（我这里是npm-publish.yml），之后填入以下信息： npm-publish.yml12345678910111213141516171819202122232425262728293031323334353637name: npm-publishon: push: branches: - masterpermissions: contents: write jobs: publish-npm: runs-on: ubuntu-latest # Clone 仓库 steps: - name: Checkout uses: actions/checkout@v2 with: ref: master # 安装 Node.js - name: Setup Node uses: actions/setup-node@v1 with: node-version: &quot;12.x&quot; registry-url: https://registry.npmjs.org/ # 发布 NPM 包 - name: Publish Package run: | git config --global user.email &quot;email@email.com&quot; git config --global user.name &quot;user_name&quot; npm version patch npm publish env: NODE_AUTH_TOKEN: $ - name: Push run: | git push 其中的master要换成你branch（分支）的名字。NPM_TOKEN就是最开始在secrets填写的token，因此名字要对应上。email和user_name可以随便写。 上传图片使用图床工具或者手动上传到GitHub repo就能自动发布到npm空间，可以看到npm包的版本version变化了（npm不支持覆盖发布，所以版本一定会变化），同时.json文件里面的版本也变化了，这得益于GitHub action。 这里推荐一个图床工具吧，只用于GitHub的，比较轻量，使用浏览器就行。 PicX图床工具官方文档https://picx-docs.xpoet.cn 使用图片提供几个国内能用的npm cdn npm cdn1234https://npm.onmicrosoft.cn/,https://jsd.onmicrosoft.cn/npm/,https://cdn.jsdelivr.net/npm/,https://unpkg.com/ 使用格式为： npm cdn1https://&#123;cdn&#125;/&#123;npm_name&#125;@&#123;version&#125;/path/to/resource.ext 例如 npm cdn12https://unpkg.com/html-hosting-for-xp@1.0.1/%E5%9C%A8python%E4%B8%AD%E8%BF%90%E8%A1%8Cbash%EF%BC%88windows%EF%BC%89.htmlhttps://jsd.onmicrosoft.cn/npm/p-hosting-for-xp@1.0.15/20230525/logo%20(2).ln5ua8psy9s.webp freecdn-js可以把资源的响应头中的mime改成text/html（而不是原来的text&#x2F;plain），从而能够让浏览器渲染网页。我写的脚本支持自动把用于写作博客.md文件转换为对应的html cdn列表。见前言 建立用于储存html静态资源的npm图床同样图床可以储存html文件。我是在本地编译好博客然后发布到GitHub repo的，因而在push之后依然可以在action中把html发布到npm空间。 package.json123456789&#123; &quot;name&quot;: &quot;&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;DO STUFF&quot;, &quot;author&quot;: &quot;XDF&quot; &quot;files&quot;: [ &quot;*.html&quot; ]&#125; 这里的package.json多了一个files的key，表示只发布html文件到npm空间。files是一个列表（array），和.gitignore文件的写作规则一样。 这里的action中的.yml文件和储存图片的repo的.yml一样，但是要删去npm version patch这行。 npm version patch的作用是更新version，在本地发布html之前（hexo d），在命令行输入npm version patch就能更新本地的package.json中的version（换而言之，在更新version之前，本地的package.json和.yml内容和目录要和GitHub repo的一致，然后push更新了version之后的.json之后，让action自动部署，发布html到npm空间） 如果用我的命令行上传博客会多次push本地文件，但是只在push html之前会更新version，那么之后的push会因为没有更新version而action部署失败，但是事实上没有什么影响 脚本的使用脚本链接见前言。如果你要使用npm空间，要在config.py中写上你的npm包名，用于查询最新的version。 同样需要注意替换你的branch bash12345678910111213141516171819202122232425f:cd f:/blog #博客根目录hexo clean &amp;&amp; hexo gcd f:/blog/package_json #储存package.json和.yml的文件夹（注意.yml路径！！）npm version patchcd f:/bloggulp# 上传之前确保./public存在package.json和.yml（注意.yml路径！！）xcopy .\\package_json .\\public /e/hhexo dcd f:/blog/.deploy_gitpython ../import_to_db_with_hexo_blog.pypython ../import_to_db_with_urls_txt.pyfreecdn find --savefreecdn manifest --merge ../pic.conffreecdn manifest --merge ../custom.conf -o manifest-full.txt #用于生成外置的freecdn-manifest.txtfreecdn js --make --cdn &quot;https://jsd.cdn.zzko.cn/gh/user/repo@main/freecdn-internal/ver/freecdn-main.min.js unpkg jsdelivr elemecdn &quot; #此命令为配置cdn链接用于加速.min.js文件，详细请查看freecdn项目的GitHubgit add --allgit commit -m &quot;update&quot;git push origin main #如果需要添加origin地址，请自行添加。python ../generate_external_manifest_file.pygit add --allgit commit -m &quot;update&quot;git push origin main #如果“is_refresh_tag”为 “True”需要上传多次python ../refresh_cdn_cache.py #可能没用","categories":[{"name":"hexo折腾","slug":"hexo折腾","permalink":"https://xingpingcn.top/categories/hexo%E6%8A%98%E8%85%BE/"}],"tags":[{"name":"npm","slug":"npm","permalink":"https://xingpingcn.top/tags/npm/"}]},{"title":"在python中运行bash实时输出结果（windows）","slug":"在python中运行bash（windows）","date":"2023-09-25T17:00:30.846Z","updated":"2023-10-27T16:45:48.510Z","comments":true,"path":"在python中运行bash（windows）.html","link":"","permalink":"https://xingpingcn.top/%E5%9C%A8python%E4%B8%AD%E8%BF%90%E8%A1%8Cbash%EF%BC%88windows%EF%BC%89.html","excerpt":"在windows的cmd中是不能运行bash的，我们需要利用git工具的bash来运行，但是用subprocess.run()会出问题，例如不能使用已经添加到环境变量的命令，如nvm、adb等；因此改用subprocess.Popen()","text":"在windows的cmd中是不能运行bash的，我们需要利用git工具的bash来运行，但是用subprocess.run()会出问题，例如不能使用已经添加到环境变量的命令，如nvm、adb等；因此改用subprocess.Popen() 批量输入并且最后输出所有结果bash_path用于定位你的git工具的bash，参数cwd=用于定位你的工作目录，和在文件夹中右键git bash here是一样的效果。 输入的命令可以带有空格，但是必须在最后加上\\n example-112345678910111213import subprocessbash_path = r&#x27;F:\\Program Files\\Git\\bin\\bash.exe&#x27;subp = subprocess.Popen(bash_path,stdin=subprocess.PIPE,stdout=subprocess.PIPE,stderr=subprocess.PIPE,encoding=&#x27;utf8&#x27;,cwd=&#x27;$your_path&#x27;)#输入的命令可以带有空格，但是必须在最后加上`\\n`subp.stdin.write(&#x27;nvm -v\\n&#x27;)subp.stdin.flush()subp.stdin.write(&#x27;nvm -v\\n&#x27;)subp.stdin.flush()subp.stdin.write(&#x27;nvm -v\\n&#x27;)subp.stdin.flush()#不要忘记了关闭subp，否则会阻塞subp.stdin.close()print(subp.stdout.read()) output1231.1.111.1.111.1.11 实时输入并输出结果需要用到多线程threading和队列queue来实时获取输出结果。最后也不要忘记调用子进程的close()方法。 example-2123456789101112131415161718192021import subprocessimport queueimport threading,timebash_path = r&#x27;F:\\Program Files\\Git\\bin\\bash.exe&#x27;def thread_for_listen(subp,q): for line in iter(subp.stdout.readline,&#x27;&#x27;): q.put(line)subp = subprocess.Popen(bash_path,stdin=subprocess.PIPE,stdout=subprocess.PIPE,stderr=subprocess.PIPE,encoding=&#x27;utf8&#x27;,cwd=&#x27;./public&#x27;)q = queue.Queue()p1 = threading.Thread(target =thread_for_listen,args=(subp,q))p1.start()for i in range(5): subp.stdin.write(&#x27;nvm -v\\n&#x27;) subp.stdin.flush() print(q.get(),end=&#x27;&#x27;) time.sleep(0.3) print(&#x27;wake up after 0.3s&#x27;)subp.stdin.close()q.task_done() output123456789101.1.11wake up after 0.3s1.1.11wake up after 0.3s1.1.11wake up after 0.3s1.1.11wake up after 0.3s1.1.11wake up after 0.3s","categories":[{"name":"python学习笔记","slug":"python学习笔记","permalink":"https://xingpingcn.top/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"python","slug":"python","permalink":"https://xingpingcn.top/tags/python/"}]},{"title":"使用freecdn-js提高hexo博客的cdn稳定性（接入透明模式）","slug":"使用freecdn-js提高hexo博客的cdn稳定性","date":"2023-09-21T03:16:39.596Z","updated":"2023-11-16T15:27:20.076Z","comments":true,"path":"使用freecdn-js提高hexo博客的cdn稳定性.html","link":"","permalink":"https://xingpingcn.top/%E4%BD%BF%E7%94%A8freecdn-js%E6%8F%90%E9%AB%98hexo%E5%8D%9A%E5%AE%A2%E7%9A%84cdn%E7%A8%B3%E5%AE%9A%E6%80%A7.html","excerpt":"由于cdn.jsdelivr.net在国内不太稳定，替代的jsd.cdn.zzko.cn稳定性稍好，但是也不是100%稳定，因而需要一个脚本实时切换到合适的CDN。freecdn-js能实现这个需求。freecdn-js是纯前端的，使用service worker，只需要插入一段js代码就可以，因此改造成本很低。但是我的文件（图片、js等）储存在GitHub图床，而freecdn-js本身需要被加速的文件的hash值，因此需要自己写脚本处理下载图片并计算。因为图片等文件的cdn链接是直接写在.md文件中的，所以写了一个正则脚本来提取cdn的链接。","text":"由于cdn.jsdelivr.net在国内不太稳定，替代的jsd.cdn.zzko.cn稳定性稍好，但是也不是100%稳定，因而需要一个脚本实时切换到合适的CDN。freecdn-js能实现这个需求。freecdn-js是纯前端的，使用service worker，只需要插入一段js代码就可以，因此改造成本很低。但是我的文件（图片、js等）储存在GitHub图床，而freecdn-js本身需要被加速的文件的hash值，因此需要自己写脚本处理下载图片并计算。因为图片等文件的cdn链接是直接写在.md文件中的，所以写了一个正则脚本来提取cdn的链接。 脚本使用方法cdn链接处理脚本https://github.com/xingpingcn/picture-bed-using-freecdn 我写的脚本发布在GitHub上，匹配了![img](url)、&#123;%link%&#125;、&#123;%image%&#125;、headimg四个tag。脚本请到GitHub下载。 可以屏蔽相关cdn（更改host或用v2rayN路由屏蔽）测试freecdn-js是否能切换备用cdn。 扩展教程在这里：使用npm空间存放图片和html并利用cdn加速 需要的包版本 package version123urllib3 1.25.11nodejs 16.10.0freecdn 0.3.1 以下引用GitHub上的README.md文件 README.mdhttps://github.com/xingpingcn/picture-bed-using-freecdn Windows的大坑！此为大坑！务必阅读 如果利用Windows来写博客，那么提交git的时候会出现LF will be replaced by CRLF the next time Git touches it的提示，CR（回车）就是\\r，LF（换行）就是\\n，Windows平台默认换行符就是CRLF(\\r\\n)，此变换会导致本地文件的hash和存放在npm或者git空间的文件的hash不一致；需要运行以下命令行: BASH12#提交检出均不转换git config --global core.autocrlf false 适用于Windows系统，且只在Windows上开发的情况。在提交、检出时不会对CRLF&#x2F;LF换行符进行转换 接入透明模式【可选】建议暂时不配置经过一段时间的观察，透明模式会起到严重的“减速”作用，FCP延后非常多。本来想试试http2服务器一次性推送freecdn.js和相关的txt的，结果发现chrome从106版本就不支持http2服务器推送了。谷歌给出的替代方案是使用103 early hints，但是nginx现在还不支持。谷歌给出的另一个代替方案是传统的link rel=preload。link rel=preload确实可以在一次性推送freecdn.js和相关的txt，但是在安装了Service Worker之后依然会再次加载freecdn.js和相关的txt，结果就是速度没变，流量还浪费不少。又或者是我设置的问题，，， 配置透明模式freecdn透明模式的优势和配置文件看下面的链接 freecdn透明模式https://github.com/EtherDream/freecdn/tree/master/docs/transparent-mode 博客使用render.com托管静态资源；因为freecdn的透明模式仅仅提供了nginx配置，而且render刚刚好也支持docker，那就直接用nginx-docker吧。 render.com免费提供每月100g流量、750小时实例时间、500min构建时间、0.1cpu和512mRAM Render spins down a Free web service that goes 15 minutes without receiving inbound traffic. Render spins the service back up whenever it next receives a request to process.Learn more 首先在你的博客根目录下的source创建Dockerfile文件。（生成博客的时候会把source内的文件移动到将要被上传到repo的文件夹内） ./source/Dockerfile12345FROM nginxCOPY ./ /usr/share/nginx/htmlCOPY ./freecdn-boot.conf /etc/nginxCOPY ./nginx.conf /etc/nginx/nginx.confEXPOSE 443 然后下载freecdn的两个配置文件，freecdn-boot.conf和nginx.conf，同样放在博客根目录，只需要改动nginx.conf。 ./source/nginx.conf123456789101112131415161718192021222324252627282930313233343536events &#123; worker_connections 1024;&#125;http &#123; server &#123; # freecdn nginx conf include freecdn-boot.conf; root /usr/share/nginx/html; expires 1h; default_type text/plain; include mime.types; # HTTPS conf listen 443; location /works &#123; return 200 &quot;it works&quot;; &#125; gzip on; gzip_static on; gzip_types text/plain text/xml text/javascript text/css application/x-javascript application/json application/xml application/xml+rss ; &#125;&#125; br和gzip压缩在render平台自动开启，见官网docs。 上传到GitHub reop（hexo d）后，在render.com创建一个web service，然后选择你的repo部署就可以了。 render.com 白嫖到底！由于免费的render web service会在15分钟之内没有连接访问的情况下断开，并在下一次访问之后重启启动，而重新启动需要较长时间；因此用cf worker去定时访问网站。 需要一个cf账号，没有的先去注册 点击左侧的worker and page，创建一个worker，这个时候不能改动代码，先确认创建。之后点击触发器标签，并找到Cron 触发器，填入3/13 * * * *，这行代码表示在每个小时过3分钟之后触发一次定时器，然后每过13分钟再触发一次（如果和每个小时过3分钟这一条件冲突，则重置触发器，即在每个小时过3分钟之后再次触发，如此反复）。设置效果如下图所示 之后编辑worker。点击快速编辑，写入以下代码 ./worker.js1234567export default &#123; async scheduled(event, env, ctx) &#123; var res = await fetch(&#x27;https://xxx.com/favicon.ico&#x27;); var data = res.json(); console.log(data); &#125;,&#125;; async scheduled表时当触发器触发时运行代码（题外话：这是不是可以当作一个免费的攻击服务器？？），fetch代表访问你的网站的资源，await似乎是必需的，因为没有await的话在render的log里面看不到worker的访问记录。","categories":[{"name":"hexo折腾","slug":"hexo折腾","permalink":"https://xingpingcn.top/categories/hexo%E6%8A%98%E8%85%BE/"}],"tags":[{"name":"volantis","slug":"volantis","permalink":"https://xingpingcn.top/tags/volantis/"}]},{"title":"v2ray+ws+tls太慢解决方法","slug":"v2raywstls太慢解决方法","date":"2023-05-25T09:41:15.519Z","updated":"2023-09-03T07:10:54.539Z","comments":true,"path":"v2raywstls太慢解决方法.html","link":"","permalink":"https://xingpingcn.top/v2raywstls%E5%A4%AA%E6%85%A2%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html","excerpt":"目前推荐hysteria，一个比较新的协议，gfw似乎还没有针对这个做出限制。我自己搭建梯子的话感觉kcp和ws+tls是比较快的，但是kcp容易被墙，而且掉包有点高，ws+tls需要用上cf的cdn加速才能快，而且要筛选速度快的cf的ip才能快（目前来看稳定性较差，建议用hysteria搭建梯子）。","text":"目前推荐hysteria，一个比较新的协议，gfw似乎还没有针对这个做出限制。我自己搭建梯子的话感觉kcp和ws+tls是比较快的，但是kcp容易被墙，而且掉包有点高，ws+tls需要用上cf的cdn加速才能快，而且要筛选速度快的cf的ip才能快（目前来看稳定性较差，建议用hysteria搭建梯子）。 先看优化结果 如果用hysteria在非晚高峰可以秒开4k60fps，晚高峰秒开1080p60fps。cf的cdn则看运气 如果用hysteria会时不时变卡，建议vps设置自动在凌晨重启 hysteria一键搭建https://github.com/emptysuns/Hi_Hysteria 下面是加了cdn的结果 cf-cdn优化后的速度（速度在一直增加，峰值跑到200m不是问题） 没有优化的话速度简直不能看。 前言推荐使用hysteria（区别于ws+tls+cdn，这个协议不能添加也不需要添加cdn）。 hysteria一键搭建https://github.com/emptysuns/Hi_Hysteria 如要添加cdn则需要：1、vps，我用的是免费的亚马逊云香港服务器ec2（2c1g）2、一个域名，可以到namesilo(点击购买域名)，.xyz域名只需要0.99刀一年，第二年重新换一个就可以。支持支付宝付费，还不用实名，送邮箱域名和隐私保护。3、cloudflare账号（没有的账号的，去谷歌搜索然后注册）4、cf ip自选工具点击查看5、 Easy install latest or LTS linux kernel and enable BBR or BBR plusBBR vs BBRplus vs BBR2 一般网络速度对比 默认已经搭建v2ray，没有搭建的可以查看这里 域名添加a记录到vps的ip因为我们要用到cloudflare的cdn，所以买到域名之后直接把nameserver（NS）改成cloudflare提供的NS。 需要在cloudflare账号中添加你的域名，cf会给你NS，然后到域名供应商的设置页面更换域名的NS。 cloudflare提供的NS 如果是在namesilo买的，更换NS的入口还比较隐蔽，点击看下图可以查看入口。 namesilo NS更换入口 之后自定义一个二级域名，例如forv2ray.example.com，添加A记录到你的vps ip。并且开启cdn（如出现下图代理状态的图标，则开启成功。或需要等一段时间才能生效） cloudflare添加A记录 之后把证书加密模式改成完全（full） 把证书加密模式改成完全（full） 这个时候可以ping一下你的二级域名，或者测一下v2ray的速度了，不过应该很慢。 证书的话我是脚本自动生成的，当然也可以到cf设置 -&gt; SSL&#x2F;TLS -&gt; 源服务器生成。 筛选适合的cloudflare ipip筛选工具https://github.com/XIU2/CloudflareSpeedTest 下载后打开运行，记得关掉你的梯子，然后将最快的ip填写到你的v2ray客户端的地址（addres）位置。 更改v2ray设置 其中的伪装域名填写你在cf添加A记录到vps IP的二级域名。 这个时候你就可以去测速了（或需要等待一段时间生效）","categories":[],"tags":[{"name":"v2ray","slug":"v2ray","permalink":"https://xingpingcn.top/tags/v2ray/"}]},{"title":"在GIT中忽略文件操作[转]","slug":"在GIT中忽略文件操作[转]","date":"2023-05-08T15:32:18.776Z","updated":"2023-05-08T15:38:36.136Z","comments":true,"path":"在GIT中忽略文件操作[转].html","link":"https://www.cnblogs.com/liuyuelinfighting/p/16206037.html","permalink":"https://xingpingcn.top/%E5%9C%A8GIT%E4%B8%AD%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C[%E8%BD%AC].html","excerpt":"","text":"","categories":[],"tags":[]},{"title":"为hexo博客添加自适应图片占位图（配合lazyload）","slug":"为hexo博客添加自适应图片占位图","date":"2023-05-06T08:10:46.753Z","updated":"2023-09-03T07:10:53.554Z","comments":true,"path":"为hexo博客添加自适应图片占位图.html","link":"","permalink":"https://xingpingcn.top/%E4%B8%BAhexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%87%AA%E9%80%82%E5%BA%94%E5%9B%BE%E7%89%87%E5%8D%A0%E4%BD%8D%E5%9B%BE.html","excerpt":"我们要得到的结果如封面所示 由于博客采用了图片懒加载（lazyload）插件，在加载dom后和图片加载成功之前，图片占位图为1px的像素，图片加载成功之后，则会把布局撑开，造成布局抖动。如果把和要加载的图片（本博客所有图片都放在了GitHub图床上，所以要用到image-size库访问远程图片）一样大小的占位图替代1px大小的占位图，则能解决布局抖动问题。本post将会占位图以硬编码的方式写到dom中，这需要修改在生成hexo博客时会用到的fancybox.js（或许每个主题用到的文件里都不一样，但最终都会使用hexo.extend.tag.register()方法；本博客使用volantis主题）。","text":"我们要得到的结果如封面所示 由于博客采用了图片懒加载（lazyload）插件，在加载dom后和图片加载成功之前，图片占位图为1px的像素，图片加载成功之后，则会把布局撑开，造成布局抖动。如果把和要加载的图片（本博客所有图片都放在了GitHub图床上，所以要用到image-size库访问远程图片）一样大小的占位图替代1px大小的占位图，则能解决布局抖动问题。本post将会占位图以硬编码的方式写到dom中，这需要修改在生成hexo博客时会用到的fancybox.js（或许每个主题用到的文件里都不一样，但最终都会使用hexo.extend.tag.register()方法；本博客使用volantis主题）。 为hexo博客添加自适应图片占位图 为图片添加占位图的基本结构以全宽图片为例： 123456789&lt;div style=&#x27;position: relative; width: 100%;&#x27;&gt; &lt;!-- padding-bottom设置占位图大小 --&gt; &lt;a style=&quot;position: relative; height: 0; padding-bottom: $&#123;h_divide_w_str&#125;;color:gray;background-color: rgb(204, 204, 204);&quot;&gt; &lt;!-- 占位图中的文字 --&gt; &lt;div style=&quot;position: absolute; left: 50%; top: 50%;transform: translate(-50%, -50%);&quot;&gt;loading picture...&lt;/div&gt; &lt;!-- 图片 --&gt; &lt;img&gt; &lt;/a&gt;&lt;/div&gt; 其中position、width、height、padding为必要属性，$&#123;h_divide_w_str&#125;为占位图的宽高比。因为需要解决布局抖动问题，所以占位图的宽高比要与图片一致，如何动态获取宽高比呢？这需要在生成hexo博客之前获取，然后代入到$&#123;h_divide_w_str&#125;中。 volantis主题动态获取远程图片的宽高比有些时候可能读取不了图片就出错，可以试多几次就没有问题，或者自己写一个失败重试的代码 在编写博客的时候用到了gallery标签插件，这个插件可以在点击图片的时候放大（这是由fancybox.js和fancybox.css驱动。注意：这里的fancybox.js是JavaScript文件，而生成hexo博客用到的同名文件是Nodejs文件） 我们需要修改的，就是生成html对应的文件，而生成gallery的文件位于blog\\node_modules\\hexo-theme-volantis\\scripts\\tags\\fancybox.js（nodejs文件）。 点击链接可以下载我修改好的fancybox.js fancybox.jshttps://github.com/xingpingcn/picx-images-hosting/blob/master/fancybox.js 以下是使用image-size库访问远程图片得到宽高比的代码示例。image-sizehttps://www.npmjs.com/package/image-size blog\\node_modules\\hexo-theme-volantis\\scripts\\tags\\fancybox.js12345678910111213141516171819const url = require(&#x27;url&#x27;)const http = require(&#x27;http&#x27;)const sizeOf = require(&#x27;image-size&#x27;)const imgUrl = &#x27;http://my-amazing-website.com/image.jpeg&#x27;const options = url.parse(imgUrl)http.get(options, function (response) &#123; const chunks = [] response.on(&#x27;data&#x27;, function (chunk) &#123; chunks.push(chunk) &#125;).on(&#x27;end&#x27;, function() &#123; const buffer = Buffer.concat(chunks) const dimensions = sizeOf(buffer); const h_divide_w = 100 * dimensions.height / dimensions.width; const h_divide_w_str = h_divide_w.toString() + &#x27;%&#x27;; //宽高比 &#125;)&#125;) 修改宽高比得到宽高比后自定义css样式，以下以volantis主题为例 blog\\node_modules\\hexo-theme-volantis\\scripts\\tags\\fancybox.js12345const result = `&lt;div class=&#x27;fancybox&#x27; style=&#x27;position: relative; width: 100%;&#x27;&gt; &lt;a class=&#x27;fancybox&#x27; pjax-fancybox itemscope itemtype=&quot;http://schema.org/ImageObject&quot; itemprop=&quot;url&quot; href=&#x27;$&#123;url&#125;&#x27; data-fancybox=&#x27;$&#123;group&#125;&#x27; data-caption=&#x27;$&#123;alt&#125;&#x27; style=&quot;position: relative;background-color: rgb(204, 204, 204);border-radius: 4px; padding-bottom: $&#123;h_divide_w_str&#125;;color:gray;&quot;&gt; &lt;div style=&quot;position: absolute; left: 50%; top: 50%;transform: translate(-50%, -50%);&quot;&gt;loading picture...&lt;/div&gt; $&#123;newItem&#125; &lt;/a&gt;$&#123;buidAlt(imageTags || alt)&#125;&lt;/div&gt;`; 此代码只是实例，不同主题的class和变量名称可能不一样 因为是获取图片宽高比异步进行的，所以要在hexo.extend.tag.register()方法中添加async: true以堵塞博客的生成，这样才能在得到宽高比后生成博客。此方法点击以下链接查看更多。 hexo标签插件（Tag）https://hexo.io/zh-cn/api/tag.html blog\\node_modules\\hexo-theme-volantis\\scripts\\tags\\fancybox.js1hexo.extend.tag.register(&#x27;gallery&#x27;, postFancybox, &#123; ends: true ,async: true&#125;); 其中postFancybox是返回值是promise类型。（点击以上的hexo标签插件（Tag）查看更多） 如果在一个gallery内有多个图片，或许需要用到for循环，那么需要promise.all()确保所有占位图生成完成后再生成网页。 修改fancybox.csshexo的css是用styl编写的，而volantis主题的fancybox.css位于blog\\node_modules\\hexo-theme-volantis\\source\\css\\_style\\_tag-plugins\\fancybox.styl。 点击链接查看更多 fancybox.stylhttps://github.com/xingpingcn/picx-images-hosting/blob/master/fancybox.styl 主要就是把影响自定义css的height属性删去（我大概也忘了修改过什么了，，，）。 添加动画 将html代码添加到fancybox.js对应位置就能得到以上效果 blog\\node_modules\\hexo-theme-volantis\\scripts\\tags\\fancybox.js1&lt;svg class=&quot;spinner0&quot; viewBox=&quot;0 0 50 50&quot;&gt; &lt;circle class=&quot;path0&quot; cx=&quot;25&quot; cy=&quot;25&quot; r=&quot;20&quot; fill=&quot;none&quot; stroke-width=&quot;4&quot;&gt;&lt;/circle&gt;&lt;/svg&gt; 然后修改css样式 blog\\node_modules\\hexo-theme-volantis\\source\\css\\_first\\base_first.styl123456789101112131415161718192021222324252627282930313233343536373839404142434445.spinner0 &#123; animation: rotate 2s linear infinite; position: absolute; top: 50%; left: 50%; margin: -25px 0 0 -25px; width: 50px; height: 50px; &amp; .path0 &#123; stroke: var(--color-list-hl); stroke-linecap: round; animation: dash 1.5s ease-in-out infinite; &#125; &#125;@keyframes rotate &#123; 100% &#123; transform: rotate(360deg); &#125;&#125;@keyframes dash &#123; 0% &#123; stroke-dasharray: 1, 150; stroke-dashoffset: 0; &#125; 50% &#123; stroke-dasharray: 90, 150; stroke-dashoffset: -35; &#125; 100% &#123; stroke-dasharray: 90, 150; stroke-dashoffset: -124; &#125;&#125;// 加载图片后暂停动画.spinner0:has(+ img.loaded)&#123; animation-play-state: paused; &gt; circle &#123; animation-play-state: paused; &#125; &#125;","categories":[{"name":"hexo折腾","slug":"hexo折腾","permalink":"https://xingpingcn.top/categories/hexo%E6%8A%98%E8%85%BE/"}],"tags":[{"name":"volantis","slug":"volantis","permalink":"https://xingpingcn.top/tags/volantis/"}]},{"title":"优化部署在github page的hexo-volantis的国内访问速度（dom、图片、js、css等）","slug":"为volantis添加cdn加速","date":"2023-04-21T08:35:18.593Z","updated":"2023-11-11T16:55:27.094Z","comments":true,"path":"为volantis添加cdn加速.html","link":"","permalink":"https://xingpingcn.top/%E4%B8%BAvolantis%E6%B7%BB%E5%8A%A0cdn%E5%8A%A0%E9%80%9F.html","excerpt":"国内直连访问自己的网站太慢了，发现官方推荐使用cdn加速，于是试了一下，也踩了一些坑，弄完之后确实快了许多","text":"国内直连访问自己的网站太慢了，发现官方推荐使用cdn加速，于是试了一下，也踩了一些坑，弄完之后确实快了许多 进阶设置进阶的设置请看以下文章 使用freecdn-js提高hexo博客的cdn稳定性 免费通过NS1利用监控宝平台实现实时基于不同运营商的故障转移 寻找访问慢的根源打开调试台-网络，查看原因 寻找访问慢的根源 可以看到，访问GitHub page、css文件和js文件都超过了1秒以上，加载图片更是慢的不得了，这几个问题都是要解决的。 使用netlify部署网页 netlify page访问速度 访问GitHub page很慢，使用使用netlify部署网页能加快访问速度【netlify示例】，netlify支持从GitHub抓取repo并部署，也就是说hexo生成并上传网页到GitHub，netlify就能同步部署，而且速度还很快。netlify每个月有100g免费流量，把图片、js等静态资源放在GitHub，然后用cdn加速（下面会讲到），会节省不少流量。 可以从上图看到，netlify托管的网页国内访问速度非常快，比cf page（平均2+秒，较为稳定）和vercel（【vercel示例】电信很慢，其他还行；容易被墙，访问跳转到反诈平台）好多了。看了一下，访问慢的似乎是因为刚刚换了netlify的dns，还有缓存所以域名解析到vercel了，所以慢的都是vercel()。 netlify可以免费给你分配一个二级域名，也可以换成自己买的域名（我没有备案速度也很快），真的很良心了。 域名我在namesilo(点击购买域名)买的，.top后缀续费4.8刀，和阿里云国际版价格差不多，国内版要便宜很多，不过要实名。当然namesilo这个价格比很多国外域名注册商便宜了。 .xyz只要0.99刀更加便宜。 其他免费的静态网站托管平台render.com（【示例】国内比较快，100g每月流量，自定义域名，ca证书。）、4everland.org（【示例1】【示例2】去中心化托管平台，国内速度一般般；支持自定义域名，ca证书未知） 使用jsd.cdn.zzko.cn替代cdn.jsdelivr.net进行cdn加速css和js进阶设置|使用freecdn-jshttps://xingpingcn.top/使用freecdn-js提高hexo博客的cdn稳定性.html 主题默认配置用的cdn.jsdelivr.net现在似乎不会突然抽筋了，但是依然很慢，jsd.cdn.zzko.cn是一个免费面向中国境内外的高速jsdelivr镜像站，访问速度很快，可以作为理想的替代方案。 备用域名cdn.jsdelivr.ren、gcore.jsdelivr.net 等 现在jsd.cdn.zzko.cn应该是修复了，所以不需要改了。直接在配置中添加一下代码即可。 如果仔细观察上面的图，可以发现访问的`style.css`变成了`style.xxxx.css`，同理`app.js`。这个是hexo在生成`public`文件夹的时候生成的，而怎么样不让他改为这种类型的名字，我不知道怎么样做。出于保险，我用了一个替代的方案，把`blog\\public\\css\\style.xxxx.css`复制出来，并重命名为`style.css`，同理`app.js`。（这个是因为设置了`cdn_version: true`） 由于访问`jsd.cdn.zzko.cn`的响应头（response）中没有指定`content-type: charset=utf-8`，因而浏览器在解析的时候会出错。这时需要在`style.css`手动添加代码 如果在配置文件中修改了`css`布局，如`sidebar`从左边移到了右边，则需要重新添加代码并上传至GitHub，因而推荐弄好布局后再上传 1@charset &quot;UTF-8&quot;; 需要在第一行顶格填写 这时我们有了能正常访问的css文件（js不需要改） 之后需要cdn加速css和js文件，直接把css和js文件放在blog\\source下，上传网页的时候hexo会把这些一起上传到根目录/。 或者在GitHub新开一个不同于个人GitHub page的repo，之后在根目录/上传这两个改了名字后的css和js文件。 使用 1https://jsd.cdn.zzko.cn/gh/user/repo/style.css 就能访问style.css了，同理app.js。 要让volantis访问cdn加速链接，需要在配置中添加一下代码。 _config.volantis.yml123456789101112cdn: enable: true set: js: app: https://jsd.cdn.zzko.cn/gh/user/repo/app.js css: style: https://jsd.cdn.zzko.cn/gh/user/repo/style.css # (异步加载样式)cdn_version: falsevolantis_static_cdn: https://jsd.cdn.zzko.cn/npm/volantis-static@0.0.1654736714924/ user和repo都改为自己的。如果没有刷新没有变化记得设置cdn_version: false然后重启服务器。 volantis_static_cdn的值或许需要根据默认配置中的静态文件版本去更改，也就是@后面的一串数字。 使用PicX图床工具 使用方便管理的图床让你编辑文章更加得心应手，此图床可以自动压缩图片，添加md格式等，配置也十分简单，直接看官方文档就ok。 其图床还有多种cdn加速可选，十分方便。 PicX图床工具官方文档https://picx-docs.xpoet.cn 结语最后看看访问速度 访问速度快 shift+F5强制刷新，速度还挺满意，dom打开速度很快了，只是没更新图片（），，懒，可以直接试试测我的网站速度看看。","categories":[{"name":"hexo折腾","slug":"hexo折腾","permalink":"https://xingpingcn.top/categories/hexo%E6%8A%98%E8%85%BE/"}],"tags":[{"name":"volantis","slug":"volantis","permalink":"https://xingpingcn.top/tags/volantis/"}]},{"title":"使用volantis中遇到的坑","slug":"hexo折腾","date":"2023-04-20T15:00:16.000Z","updated":"2023-10-13T08:36:13.279Z","comments":true,"path":"hexo折腾.html","link":"","permalink":"https://xingpingcn.top/hexo%E6%8A%98%E8%85%BE.html","excerpt":"使用volantis中遇到几个坑，如volantis404页面不生效，sidebar效果不生效，如何更改图片尺寸，手机模式下toc会被遮挡等，这里做了笔记","text":"使用volantis中遇到几个坑，如volantis404页面不生效，sidebar效果不生效，如何更改图片尺寸，手机模式下toc会被遮挡等，这里做了笔记 写在前面更改配置的时候记得刷新页面，如果不生效，记得重启本地服务器！ 更改配置的时候记得刷新页面，如果不生效，记得重启本地服务器！ 更改配置的时候记得刷新页面，如果不生效，记得重启本地服务器！ 404页面不生效按照官方的文档配置404页面，在本地打开一个不存在的页面，并不显示404页面，重启服务器依然不行。干脆直接放到GitHub page上，结果404页面能生效 结论：如果本地404页面不生效，就上传到服务器端查看是否生效 sidebar效果不生效我的volantis版本是volantis5.7，主题文件设置中的sidebar的shadow, floatable, blur效果不生效 _config.volantis.yml12sidebar: effect: [shadow, floatable, blur] 我的方法是打开blog\\node_modules\\hexo-theme-volantis\\layout\\_widget，这里存放着sidebar的各个组件。 以下以修改blogger组件为例： 找到代码 blog\\node_modules\\hexo-theme-volantis\\layout\\_widget\\blogger.ejs1&lt;section class=&quot;widget &lt;%- item.class %&gt; &lt;%- page.widget_platform %&gt; &lt;%- page.widget_pjax %&gt;&quot;&gt; 可以看到class中是没有shadow, floatable, blur的，只需要我们手动添加关键词就能生效 blog\\node_modules\\hexo-theme-volantis\\layout\\_widget\\blogger.ejs1&lt;section class=&quot;widget blur floatable shadow &lt;%- item.class %&gt; &lt;%- page.widget_platform %&gt; &lt;%- page.widget_pjax %&gt;&quot;&gt; 刷新就可以看到效果生效，左边的blogger组件有高斯模糊并且有阴影效果了。 效果 其他组件也是同样的方法，关键是要找到这行代码 blog\\node_modules\\hexo-theme-volantis\\layout\\_widget\\xxx.ejs1&lt;section class=&quot;widget ...&quot;&gt; 这行代码可以在浏览器打开元素查看器找到 按F12可以打开元素查看器 效果 更改图片显示尺寸和圆角半径图片显示尺寸使用以下代码，则能显示如本post中的图片一样的效果 &#123;% image https://cdn.jsdelivr.net/gh/xingpingcn/picx-images-hosting@master/20230420/image.2v43xxro3vs0.png::width=80%::alt=效果 %&#125; 其中的url，width和alt可以自己修改。width的单位可以是px也可以是百分比% 图片圆角半径打开\\img.styl就可以修改圆角半径 blog\\node_modules\\hexo-theme-volantis\\source\\css\\_style\\_layout\\img.styl12345678910111213141516.md img position: relative trans() @media screen and (max-width: $device-mobile) box-shadow: none div&gt;img,p&gt;img,a&gt;img display: block margin: auto border-radius: 4px @media screen and (max-width: $device-mobile) border-radius: 4px span img display: inline margin: auto 其中的border-radius就是半径的key（默认的配置文件中应该有3个，我没有复制全），修改你想要的value。 如果在像我一样在第7行行尾添加a&gt;img，则可以修改使用gallery标签插件的图片中border-radius的值。 解决手机模式下toc会被遮挡的问题 toc被遮挡 解决后 只需要在\\navbar_first.styl中修改z-index值为一个较小的数字。 blog\\node_modules\\hexo-theme-volantis\\source\\css\\_first12345.l_header $iconW = 36px $iconMargin = 4px position: fixed z-index: 10","categories":[{"name":"hexo折腾","slug":"hexo折腾","permalink":"https://xingpingcn.top/categories/hexo%E6%8A%98%E8%85%BE/"}],"tags":[{"name":"volantis","slug":"volantis","permalink":"https://xingpingcn.top/tags/volantis/"}]},{"title":"test","slug":"test4","date":"2023-04-19T16:51:16.000Z","updated":"2023-09-03T07:10:58.596Z","comments":true,"path":"test4.html","link":"","permalink":"https://xingpingcn.top/test4.html","excerpt":"a cat","text":"a cat a cat删除线 臭卷宝hh More info: bilibi 123222 2311 info about a cat 视频 轮转（科学上网）","categories":[],"tags":[{"name":"test","slug":"test","permalink":"https://xingpingcn.top/tags/test/"}]}],"categories":[{"name":"hexo折腾","slug":"hexo折腾","permalink":"https://xingpingcn.top/categories/hexo%E6%8A%98%E8%85%BE/"},{"name":"python学习笔记","slug":"python学习笔记","permalink":"https://xingpingcn.top/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"npm","slug":"npm","permalink":"https://xingpingcn.top/tags/npm/"},{"name":"python","slug":"python","permalink":"https://xingpingcn.top/tags/python/"},{"name":"volantis","slug":"volantis","permalink":"https://xingpingcn.top/tags/volantis/"},{"name":"v2ray","slug":"v2ray","permalink":"https://xingpingcn.top/tags/v2ray/"},{"name":"test","slug":"test","permalink":"https://xingpingcn.top/tags/test/"}]}